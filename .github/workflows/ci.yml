name: CI

on:
  schedule:
    - cron: 0 2 * * 1-5
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    name: Tests PHP ${{ matrix.php }} ${{ matrix.dependency }} (Symfony ${{ matrix.symfony }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '5.5'
          - '5.6'
          - '7.0'
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
        symfony:
          - '3.4.*'
          - '4.4.*'
          - '5.0.*'
        include:
          - php: '7.1'
            coverage: true
        dependency:
          - ''
          - 'lowest'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, dom, iconv, intl, json, libxml, mbstring, phar, tokenizer, xdebug, xml, xmlwriter

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Configure Symfony
        run: |
          composer global require symfony/flex
          composer config extra.symfony.require "${{ matrix.symfony }}"

      - name: Update project dependencies
        if: matrix.dependency == ''
        run: composer update --no-progress --ansi --prefer-stable

      - name: Update project dependencies lowest
        if: matrix.dependency == 'lowest'
        run: composer update --no-progress --ansi --prefer-stable --prefer-lowest

      - name: Validate composer
        run: composer validate --strict --no-check-lock

      - name: Run tests
        if: !matrix.coverage
        run: vendor/bin/phpunit

      - name: Run tests with coverage
        if: matrix.coverage
        run: vendor/bin/phpunit --coverage-text --coverage-clover=build/coverage.xml

      - name: Upload coverage
        if: matrix.coverage
        run: |
          wget https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover build/coverage.xml
